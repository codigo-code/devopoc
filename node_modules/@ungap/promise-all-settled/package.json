{
  "_args": [
    [
      {
        "raw": "@ungap/promise-all-settled@1.1.2",
        "scope": "@ungap",
        "escapedName": "@ungap%2fpromise-all-settled",
        "name": "@ungap/promise-all-settled",
        "rawSpec": "1.1.2",
        "spec": "1.1.2",
        "type": "version"
      },
      "/Users/neoris/dev/poc-devops/poc/node_modules/mocha"
    ]
  ],
  "_from": "@ungap/promise-all-settled@1.1.2",
  "_hasShrinkwrap": false,
  "_id": "@ungap/promise-all-settled@1.1.2",
  "_location": "/@ungap/promise-all-settled",
  "_nodeVersion": "14.5.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/promise-all-settled_1.1.2_1595342962005_0.26371445230013246"
  },
  "_npmUser": {
    "name": "webreflection",
    "email": "andrea.giammarchi@gmail.com"
  },
  "_npmVersion": "6.14.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@ungap/promise-all-settled@1.1.2",
    "scope": "@ungap",
    "escapedName": "@ungap%2fpromise-all-settled",
    "name": "@ungap/promise-all-settled",
    "rawSpec": "1.1.2",
    "spec": "1.1.2",
    "type": "version"
  },
  "_requiredBy": [
    "/mocha"
  ],
  "_resolved": "https://globaldevtools.bbva.com:443/artifactory/api/npm/npm-repo/@ungap/promise-all-settled/-/promise-all-settled-1.1.2.tgz",
  "_shasum": "aa58042711d6e3275dd37dc597e5d31e8c290a44",
  "_shrinkwrap": null,
  "_spec": "@ungap/promise-all-settled@1.1.2",
  "_where": "/Users/neoris/dev/poc-devops/poc/node_modules/mocha",
  "author": {
    "name": "Andrea Giammarchi"
  },
  "bugs": {
    "url": "https://github.com/ungap/promise-all-settled/issues"
  },
  "dependencies": {},
  "description": "A cross platform Promise.allSettled polyfill",
  "devDependencies": {
    "coveralls": "^3.1.0",
    "nyc": "^15.0.1",
    "uglify-js": "^3.9.1"
  },
  "directories": {},
  "dist": {
    "tarball": "https://globaldevtools.bbva.com:443/artifactory/api/npm/npm-repo/@ungap/promise-all-settled/-/promise-all-settled-1.1.2.tgz",
    "shasum": "aa58042711d6e3275dd37dc597e5d31e8c290a44"
  },
  "exports": {
    "import": "./esm/index.js",
    "default": "./cjs/index.js"
  },
  "gitHead": "ed43b3d9bc2027789c4388aff198141b4feb8f04",
  "homepage": "https://github.com/ungap/promise-all-settled#readme",
  "keywords": [
    "Promise",
    "allSettled",
    "polyfill",
    "utility",
    "ungap"
  ],
  "license": "ISC",
  "main": "./cjs/index.js",
  "module": "./esm/index.js",
  "name": "@ungap/promise-all-settled",
  "optionalDependencies": {},
  "readme": "# Promise.allSettled\n\n[![Build Status](https://travis-ci.com/ungap/promise-all-settled.svg?branch=master)](https://travis-ci.com/ungap/promise-all-settled) [![Coverage Status](https://coveralls.io/repos/github/ungap/promise-all-settled/badge.svg?branch=master)](https://coveralls.io/github/ungap/promise-all-settled?branch=master) [![Greenkeeper badge](https://badges.greenkeeper.io/ungap/promise-all-settled.svg)](https://greenkeeper.io/) ![WebReflection status](https://offline.report/status/webreflection.svg)\n\nA cross platform [Promise.allSettled](https://github.com/tc39/proposal-promise-allSettled) polyfill.\n\n  * CDN global utility via https://unpkg.com/@ungap/promise-all-settled\n  * ESM via `import allSettled from '@ungap/promise-all-settled'`\n  * CJS via `const allSettled = require('@ungap/promise-all-settled')`\n\n\n### Example\n\n```js\nconst allSettled = require(\"@ungap/promise-all-settled\");\n\n// use it via call\nallSettled.call(Promise, []);\n\n// or bind it:\nconst $settled = allSettled.bind(Promise);\n\n// or put it in the Promise class\nif (!Promise.allSettled)\n  Promise.allSettled = allSettled;\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ungap/promise-all-settled.git"
  },
  "scripts": {
    "build": "npm run cjs && npm run esm && npm run min && npm run test && npm run size",
    "cjs": "cp index.js cjs/ && echo 'module.exports = allSettled;' >> cjs/index.js",
    "coveralls": "nyc report --reporter=text-lcov | coveralls",
    "esm": "cp index.js esm/ && echo 'export default allSettled;' >> esm/index.js",
    "min": "uglifyjs index.js --support-ie8 --comments=/^!/ -c -m -o min.js",
    "size": "cat index.js | wc -c && cat min.js | wc -c && gzip -c9 min.js | wc -c && cat min.js | brotli | wc -c",
    "test": "nyc node test/index.js"
  },
  "type": "module",
  "unpkg": "min.js",
  "version": "1.1.2"
}
