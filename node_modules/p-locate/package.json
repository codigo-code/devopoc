{
  "_args": [
    [
      {
        "raw": "p-locate@^5.0.0",
        "scope": null,
        "escapedName": "p-locate",
        "name": "p-locate",
        "rawSpec": "^5.0.0",
        "spec": ">=5.0.0 <6.0.0",
        "type": "range"
      },
      "/Users/neoris/dev/poc-devops/poc/node_modules/locate-path"
    ]
  ],
  "_from": "p-locate@^5.0.0",
  "_hasShrinkwrap": false,
  "_id": "p-locate@5.0.0",
  "_location": "/p-locate",
  "_nodeVersion": "14.5.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/p-locate_5.0.0_1597081354525_0.2940768154089548"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "6.14.7",
  "_phantomChildren": {},
  "_requested": {
    "raw": "p-locate@^5.0.0",
    "scope": null,
    "escapedName": "p-locate",
    "name": "p-locate",
    "rawSpec": "^5.0.0",
    "spec": ">=5.0.0 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/locate-path"
  ],
  "_resolved": "https://globaldevtools.bbva.com:443/artifactory/api/npm/npm-repo/p-locate/-/p-locate-5.0.0.tgz",
  "_shasum": "83c8315c6785005e3bd021839411c9e110e6d834",
  "_shrinkwrap": null,
  "_spec": "p-locate@^5.0.0",
  "_where": "/Users/neoris/dev/poc-devops/poc/node_modules/locate-path",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "https://sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/p-locate/issues"
  },
  "dependencies": {
    "p-limit": "^3.0.2"
  },
  "description": "Get the first fulfilled promise that satisfies the provided testing function",
  "devDependencies": {
    "ava": "^2.4.0",
    "delay": "^4.1.0",
    "in-range": "^2.0.0",
    "time-span": "^4.0.0",
    "tsd": "^0.13.1",
    "xo": "^0.32.1"
  },
  "directories": {},
  "dist": {
    "tarball": "https://globaldevtools.bbva.com:443/artifactory/api/npm/npm-repo/p-locate/-/p-locate-5.0.0.tgz",
    "shasum": "83c8315c6785005e3bd021839411c9e110e6d834"
  },
  "engines": {
    "node": ">=10"
  },
  "files": [
    "index.js",
    "index.d.ts"
  ],
  "funding": "https://github.com/sponsors/sindresorhus",
  "gitHead": "a01d0e4d555c00e1551954751fd3cd4b238ce82f",
  "homepage": "https://github.com/sindresorhus/p-locate#readme",
  "keywords": [
    "promise",
    "locate",
    "find",
    "finder",
    "search",
    "searcher",
    "test",
    "array",
    "collection",
    "iterable",
    "iterator",
    "race",
    "fulfilled",
    "fastest",
    "async",
    "await",
    "promises",
    "bluebird"
  ],
  "license": "MIT",
  "name": "p-locate",
  "optionalDependencies": {},
  "readme": "# p-locate [![Build Status](https://travis-ci.com/sindresorhus/p-locate.svg?branch=master)](https://travis-ci.com/github/sindresorhus/p-locate)\n\n> Get the first fulfilled promise that satisfies the provided testing function\n\nThink of it like an async version of [`Array#find`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/find).\n\n## Install\n\n```\n$ npm install p-locate\n```\n\n## Usage\n\nHere we find the first file that exists on disk, in array order.\n\n```js\nconst pathExists = require('path-exists');\nconst pLocate = require('p-locate');\n\nconst files = [\n\t'unicorn.png',\n\t'rainbow.png', // Only this one actually exists on disk\n\t'pony.png'\n];\n\n(async () => {\n\tconst foundPath = await pLocate(files, file => pathExists(file));\n\n\tconsole.log(foundPath);\n\t//=> 'rainbow'\n})();\n```\n\n*The above is just an example. Use [`locate-path`](https://github.com/sindresorhus/locate-path) if you need this.*\n\n## API\n\n### pLocate(input, tester, options?)\n\nReturns a `Promise` that is fulfilled when `tester` resolves to `true` or the iterable is done, or rejects if any of the promises reject. The fulfilled value is the current iterable value or `undefined` if `tester` never resolved to `true`.\n\n#### input\n\nType: `Iterable<Promise | unknown>`\n\nAn iterable of promises/values to test.\n\n#### tester(element)\n\nType: `Function`\n\nThis function will receive resolved values from `input` and is expected to return a `Promise<boolean>` or `boolean`.\n\n#### options\n\nType: `object`\n\n##### concurrency\n\nType: `number`\\\nDefault: `Infinity`\\\nMinimum: `1`\n\nNumber of concurrently pending promises returned by `tester`.\n\n##### preserveOrder\n\nType: `boolean`\\\nDefault: `true`\n\nPreserve `input` order when searching.\n\nDisable this to improve performance if you don't care about the order.\n\n## Related\n\n- [p-map](https://github.com/sindresorhus/p-map) - Map over promises concurrently\n- [p-filter](https://github.com/sindresorhus/p-filter) - Filter promises concurrently\n- [p-any](https://github.com/sindresorhus/p-any) - Wait for any promise to be fulfilled\n- [Moreâ€¦](https://github.com/sindresorhus/promise-fun)\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-p-locate?utm_source=npm-p-locate&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/p-locate.git"
  },
  "scripts": {
    "test": "xo && ava && tsd"
  },
  "version": "5.0.0"
}
