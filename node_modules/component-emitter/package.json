{
  "_args": [
    [
      {
        "raw": "component-emitter@^1.2.1",
        "scope": null,
        "escapedName": "component-emitter",
        "name": "component-emitter",
        "rawSpec": "^1.2.1",
        "spec": ">=1.2.1 <2.0.0",
        "type": "range"
      },
      "/Users/neoris/dev/poc-devops/poc/node_modules/base"
    ]
  ],
  "_from": "component-emitter@^1.2.1",
  "_hasShrinkwrap": false,
  "_id": "component-emitter@1.3.0",
  "_location": "/component-emitter",
  "_nodeVersion": "8.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/component-emitter_1.3.0_1555361288195_0.12626268851479416"
  },
  "_npmUser": {
    "name": "nami-doc",
    "email": "vendethiel@hotmail.fr"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "component-emitter@^1.2.1",
    "scope": null,
    "escapedName": "component-emitter",
    "name": "component-emitter",
    "rawSpec": "^1.2.1",
    "spec": ">=1.2.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/base",
    "/cache-base"
  ],
  "_resolved": "https://globaldevtools.bbva.com:443/artifactory/api/npm/npm-repo/component-emitter/-/component-emitter-1.3.0.tgz",
  "_shasum": "16e4070fba8ae29b679f2215853ee181ab2eabc0",
  "_shrinkwrap": null,
  "_spec": "component-emitter@^1.2.1",
  "_where": "/Users/neoris/dev/poc-devops/poc/node_modules/base",
  "bugs": {
    "url": "https://github.com/component/emitter/issues"
  },
  "component": {
    "scripts": {
      "emitter/index.js": "index.js"
    }
  },
  "dependencies": {},
  "description": "Event emitter",
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "directories": {},
  "dist": {
    "tarball": "https://globaldevtools.bbva.com:443/artifactory/api/npm/npm-repo/component-emitter/-/component-emitter-1.3.0.tgz",
    "shasum": "16e4070fba8ae29b679f2215853ee181ab2eabc0"
  },
  "files": [
    "index.js",
    "LICENSE"
  ],
  "gitHead": "6bd7817e8a444cb16e8abdf7dd2d7f04d5ca3dc8",
  "homepage": "https://github.com/component/emitter#readme",
  "license": "MIT",
  "main": "index.js",
  "name": "component-emitter",
  "optionalDependencies": {},
  "readme": "# Emitter [![Build Status](https://travis-ci.org/component/emitter.png)](https://travis-ci.org/component/emitter)\r\n\r\n  Event emitter component.\r\n\r\n## Installation\r\n\r\n```\r\n$ component install component/emitter\r\n```\r\n\r\n## API\r\n\r\n### Emitter(obj)\r\n\r\n  The `Emitter` may also be used as a mixin. For example\r\n  a \"plain\" object may become an emitter, or you may\r\n  extend an existing prototype.\r\n\r\n  As an `Emitter` instance:\r\n\r\n```js\r\nvar Emitter = require('emitter');\r\nvar emitter = new Emitter;\r\nemitter.emit('something');\r\n```\r\n\r\n  As a mixin:\r\n\r\n```js\r\nvar Emitter = require('emitter');\r\nvar user = { name: 'tobi' };\r\nEmitter(user);\r\n\r\nuser.emit('im a user');\r\n```\r\n\r\n  As a prototype mixin:\r\n\r\n```js\r\nvar Emitter = require('emitter');\r\nEmitter(User.prototype);\r\n```\r\n\r\n### Emitter#on(event, fn)\r\n\r\n  Register an `event` handler `fn`.\r\n\r\n### Emitter#once(event, fn)\r\n\r\n  Register a single-shot `event` handler `fn`,\r\n  removed immediately after it is invoked the\r\n  first time.\r\n\r\n### Emitter#off(event, fn)\r\n\r\n  * Pass `event` and `fn` to remove a listener.\r\n  * Pass `event` to remove all listeners on that event.\r\n  * Pass nothing to remove all listeners on all events.\r\n\r\n### Emitter#emit(event, ...)\r\n\r\n  Emit an `event` with variable option args.\r\n\r\n### Emitter#listeners(event)\r\n\r\n  Return an array of callbacks, or an empty array.\r\n\r\n### Emitter#hasListeners(event)\r\n\r\n  Check if this emitter has `event` handlers.\r\n\r\n## License\r\n\r\nMIT\r\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/component/emitter.git"
  },
  "scripts": {
    "test": "make test"
  },
  "version": "1.3.0"
}
