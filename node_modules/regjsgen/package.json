{
  "_args": [
    [
      {
        "raw": "regjsgen@^0.5.1",
        "scope": null,
        "escapedName": "regjsgen",
        "name": "regjsgen",
        "rawSpec": "^0.5.1",
        "spec": ">=0.5.1 <0.6.0",
        "type": "range"
      },
      "/Users/neoris/dev/poc-devops/poc/node_modules/regexpu-core"
    ]
  ],
  "_from": "regjsgen@^0.5.1",
  "_hasShrinkwrap": false,
  "_id": "regjsgen@0.5.2",
  "_location": "/regjsgen",
  "_nodeVersion": "12.16.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/regjsgen_0.5.2_1590334070278_0.09375785063276543"
  },
  "_npmUser": {
    "name": "d10",
    "email": "demoneaux@gmail.com"
  },
  "_npmVersion": "6.14.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "regjsgen@^0.5.1",
    "scope": null,
    "escapedName": "regjsgen",
    "name": "regjsgen",
    "rawSpec": "^0.5.1",
    "spec": ">=0.5.1 <0.6.0",
    "type": "range"
  },
  "_requiredBy": [
    "/regexpu-core"
  ],
  "_resolved": "https://globaldevtools.bbva.com:443/artifactory/api/npm/npm-repo/regjsgen/-/regjsgen-0.5.2.tgz",
  "_shasum": "92ff295fb1deecbf6ecdab2543d207e91aa33733",
  "_shrinkwrap": null,
  "_spec": "regjsgen@^0.5.1",
  "_where": "/Users/neoris/dev/poc-devops/poc/node_modules/regexpu-core",
  "author": {
    "name": "Benjamin Tan",
    "url": "https://ofcr.se/"
  },
  "bugs": {
    "url": "https://github.com/bnjmnt4n/regjsgen/issues"
  },
  "dependencies": {},
  "description": "Generate regular expressions from regjsparser’s AST.",
  "devDependencies": {
    "codecov": "^3.7.0",
    "nyc": "^15.0.1",
    "regjsparser": "~0.6.4",
    "request": "^2.88.2"
  },
  "directories": {},
  "dist": {
    "tarball": "https://globaldevtools.bbva.com:443/artifactory/api/npm/npm-repo/regjsgen/-/regjsgen-0.5.2.tgz",
    "shasum": "92ff295fb1deecbf6ecdab2543d207e91aa33733"
  },
  "files": [
    "LICENSE-MIT.txt",
    "regjsgen.js"
  ],
  "gitHead": "813c5d1f28c1fa4be3abcafaaf3240d28b8145f6",
  "homepage": "https://github.com/bnjmnt4n/regjsgen",
  "keywords": [
    "ast",
    "generate",
    "regex",
    "regexp",
    "regular expressions"
  ],
  "license": "MIT",
  "main": "regjsgen.js",
  "name": "regjsgen",
  "optionalDependencies": {},
  "readme": "# regjsgen [![Build status][travis-ci-img]][travis-ci] [![Code coverage status][codecov-img]][codecov]\n\nGenerate regular expressions from [regjsparser][regjsparser]’s AST.\n\n## Installation\n\n```sh\nnpm i regjsgen\n```\n\n## API\n\n### `regjsgen.generate(ast)`\n\nThis function accepts an abstract syntax tree representing a regular expression (see [regjsparser][regjsparser]), and returns the generated regular expression string.\n\n```js\nconst regjsparser = require('regjsparser');\nconst regjsgen = require('regjsgen');\n\n// Generate an AST with `regjsparser`.\nlet ast = regjsparser.parse(regex);\n\n// Modify AST\n// …\n\n// Generate `RegExp` string with `regjsgen`.\nlet regex = regjsgen.generate(ast);\n```\n\n## Support\n\nTested in Node.js 0.10, 0.12, 4, 6, 8, 10, 12 and 14.<br>\nCompatible with regjsparser v0.6.4’s AST.\n\n\n[travis-ci]: https://travis-ci.org/bnjmnt4n/regjsgen\n[travis-ci-img]: https://travis-ci.org/bnjmnt4n/regjsgen.svg?branch=master\n[codecov]: https://codecov.io/gh/bnjmnt4n/regjsgen\n[codecov-img]: https://codecov.io/gh/bnjmnt4n/regjsgen/branch/master/graph/badge.svg\n[regjsparser]: https://github.com/jviereck/regjsparser\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bnjmnt4n/regjsgen.git"
  },
  "scripts": {
    "coverage": "nyc --reporter=html npm test",
    "report-coverage": "nyc --reporter=lcov npm test && codecov",
    "test": "node tests/tests.js",
    "update-fixtures": "node tests/update-fixtures.js"
  },
  "version": "0.5.2"
}
